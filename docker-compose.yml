version: '3'
services:
  bootnode:
    build:
      context: .
      dockerfile: Dockerfile 
    image: shaspitz/geth-poa:v1
    environment:
      - GETH_NODE_TYPE=bootnode
      - BOOT_KEY=7b548c1c0fbe80ef1eb0aaec2edf26fd20fb0d758e94948cf6c5f2a486e735f6
    networks:
      poa_net:
        ipv4_address: '172.13.0.100'
    ports:
      - 8545:8545
    volumes:
      - geth-data-bootnode:/data
  node1:
    build: 
      context: .
      dockerfile: Dockerfile
    image: shaspitz/geth-poa:v1
    environment:
      - GETH_NODE_TYPE=signer
      - BLOCK_SIGNER_ADDRESS=0xd9cd8E5DE6d55f796D980B818D350C0746C25b97
      - BLOCK_SIGNER_PRIVATE_KEY=${NODE1_PRIVATE_KEY}
    networks:
      poa_net:
        ipv4_address: '172.13.0.2'
    volumes:
      - geth-data-node1:/data
  node2:
    build: 
      context: .
      dockerfile: Dockerfile
    image: shaspitz/geth-poa:v1
    environment:
      - GETH_NODE_TYPE=signer
      - BLOCK_SIGNER_ADDRESS=0x788EBABe5c3dD422Ef92Ca6714A69e2eabcE1Ee4
      - BLOCK_SIGNER_PRIVATE_KEY=${NODE2_PRIVATE_KEY}
    networks:
      poa_net:
        ipv4_address: '172.13.0.3'
    volumes:
      - geth-data-node2:/data
  hyperlane-deployer:
    build:
      context: ./hyperlane-deployer
      dockerfile: Dockerfile
    healthcheck:
      test: ["CMD-SHELL", "test -f /go/hyperlane-deploy/artifacts/done || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 30
    environment:
      - CONTRACT_DEPLOYER_PRIVATE_KEY=${CONTRACT_DEPLOYER_PRIVATE_KEY}
    networks:
      poa_net:
        ipv4_address: '172.13.0.50'
    volumes:
      - hyperlane-deploy-artifacts:/go/hyperlane-deploy/artifacts
  hyperlane-validator1:
    build:
      context: ./hyperlane-validator
      dockerfile: Dockerfile
    # TODO: evaluate why container needs to run as root
    user: "0:0"
    depends_on:
      hyperlane-deployer:
        condition: service_healthy
    environment:
      # Reuse geth node1 private key for validator
      - VALIDATOR_PRIVATE_KEY=${NODE1_PRIVATE_KEY}
    networks:
      poa_net:
        ipv4_address: '172.13.0.75'
    volumes:
      - hyperlane-deploy-artifacts:/deploy-artifacts
      - hyperlane-validator1-sigs:/sigs
      - hyperlane-validator1-db:/val-db
  hyperlane-validator2:
    build:
      context: ./hyperlane-validator
      dockerfile: Dockerfile
    # TODO: evaluate why container needs to run as root
    user: "0:0"
    depends_on:
      hyperlane-deployer:
        condition: service_healthy
    environment:
      # Reuse geth node2 private key for validator
      - VALIDATOR_PRIVATE_KEY=${NODE2_PRIVATE_KEY} 
    networks:
      poa_net:
        ipv4_address: '172.13.0.76'
    volumes:
      - hyperlane-deploy-artifacts:/deploy-artifacts
      - hyperlane-validator2-sigs:/sigs
      - hyperlane-validator2-db:/val-db
  hyperlane-relayer:
    build:
      context: ./hyperlane-relayer
      dockerfile: Dockerfile
    user: "0:0"
    depends_on:
      hyperlane-deployer:
        condition: service_healthy
    environment:
      - RELAYER_PRIVATE_KEY=${RELAYER_PRIVATE_KEY}
    networks:
      poa_net:
        ipv4_address: '172.13.0.77'
    volumes:
      - hyperlane-deploy-artifacts:/deploy-artifacts
      - hyperlane-validator1-sigs:/validator1-sigs
      - hyperlane-validator2-sigs:/validator2-sigs
      - hyperlane-relayer-db:/relayer-db

networks:
  poa_net:
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: 172.13.0.0/16

volumes:
  geth-data-bootnode:
  geth-data-node1:
  geth-data-node2:
  hyperlane-deploy-artifacts:
  hyperlane-validator1-sigs:
  hyperlane-validator2-sigs:
  hyperlane-validator1-db:
  hyperlane-validator2-db:
  hyperlane-relayer-db:
